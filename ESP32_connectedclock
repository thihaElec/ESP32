#include <Wire.h>
#include <TimeLib.h>
#include "RTClib.h"

#include <WiFi.h>
#include <NTPClient.h>
#include <WiFiUdp.h>

#include <NeoPixelBus.h>

// neo pixel pin
#define colorSaturation 128
#define MPIN        5 
#define NUMPIXELS 72 // Popular NeoPixel ring size
NeoPixelBus<NeoGrbFeature, Neo800KbpsMethod> stripm(NUMPIXELS, MPIN);

RTC_DS1307 rtc;

char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

// Replace with your network credentials
const char* ssid     = "XXX";
const char* password = "XXXXXXXXXX";

// Variables to save date and time
String formattedDate;
String dayStamp;
String timeStamp;

//
WiFiClient  client;
unsigned long myChannelNumber = 123864;
const char * myWriteAPIKey = "HIGL9HE1V4FRJIBU";

// Define NTP Client to get time
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP);

RTC_DS1307 RTC;

RgbColor red(colorSaturation, 0, 0);
RgbColor green(0, colorSaturation, 0);
RgbColor blue(0, 0, colorSaturation);
RgbColor white(colorSaturation);
RgbColor black(0);

HslColor hslRed(red);
HslColor hslGreen(green);
HslColor hslBlue(blue);
HslColor hslWhite(white);
HslColor hslBlack(black);
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial.println("DS1307RTC Read Test");
  Serial.println("-------------------"); 

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(800);
    Serial.print(".");
  }

  if (! rtc.begin()) {
     Serial.println("Couldn't find RTC");
     while (1);
  }
  if (! rtc.isrunning()) {
    Serial.println("RTC is NOT running!");
    // following line sets the RTC to the date & time this sketch was compiled
    // rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
    // This line sets the RTC with an explicit date & time, for example to set
    // January 21, 2014 at 3am you would call:
    // rtc.adjust(DateTime(2014, 1, 21, 3, 0, 0));
  }

// Initialize a NTPClient to get time
  timeClient.begin();
  timeClient.setTimeOffset(23400); // Myanmar GMT+6.5

//setit for first time
  setRTCtime();

  stripm.Begin();
  stripm.Show();
}

void loop() {
  int cnt;
  int clk;
  int hr,mint;
  uint8_t data[] = { 0, 1, 2, 3 };
  
  for(int i=0; i<NUMPIXELS; i++) { // For each pixel...
    stripm.SetPixelColor(i, black);
    stripm.Show();   // Send the updated pixel colors to the hardware.
  }

  tmElements_t tm;  
  
  DateTime now = rtc.now();
  Serial.print(now.hour());
  Serial.print(':');
  Serial.println(now.minute());


  clk = now.hour()*100+now.minute();
  hr = now.hour(); 
  mint = now.minute();
  if (hr<13)
  {
    Serial.println(hr);
    if (hr != 0)
        stripm.SetPixelColor(60+hr-1, green);
  }
  else
  {
    Serial.println(hr-12);
    stripm.SetPixelColor(60+hr-13, green);  
  }
  Serial.println(mint);
  stripm.SetPixelColor(mint, red);  
  stripm.Show();   // Send the updated pixel colors to the hardware.
  
  delay(10000); 
  delay(10000); 
  delay(10000);

  if (cnt++>2880)
  {
    setRTCtime();
  }
}
void setRTCtime(){
  int idx,lastidx;
  String s_yr,s_mn,s_dy,s_hr, s_min, s_sec;
  int clk,yr,mn,dy,hr,mint,sec;
    
  while(!timeClient.update()) {
    timeClient.forceUpdate();
  }  
  
  // The formattedDate comes with the following format:
  // 2018-05-28T16:00:13Z
  // We need to extract date and time
  formattedDate = timeClient.getFormattedDate();
  Serial.println(formattedDate);

  // Extract date
  int splitT = formattedDate.indexOf("T");
  dayStamp = formattedDate.substring(0, splitT);
  Serial.print("DATE: ");
  Serial.println(dayStamp);

  idx = dayStamp.indexOf("-");
  lastidx = dayStamp.lastIndexOf("-");

  s_yr = dayStamp.substring(0, idx);
  Serial.println(s_yr);  

  s_mn = dayStamp.substring(idx+1, lastidx);
  Serial.println(s_mn);  

  s_dy = dayStamp.substring(lastidx+1, dayStamp.length());
  Serial.println(s_dy);  
  
  // Extract time
  timeStamp = formattedDate.substring(splitT+1, formattedDate.length()-1);
  Serial.print("HOUR: ");
  Serial.println(timeStamp);  
   
  idx = timeStamp.indexOf(":");

  s_hr = timeStamp.substring(0, idx);
  Serial.println(s_hr);

  lastidx = timeStamp.lastIndexOf(":");

  s_min = timeStamp.substring(idx+1, lastidx);
  Serial.println(s_min);  

  s_sec = timeStamp.substring(lastidx+1, timeStamp.length());
  Serial.println(s_sec);      
  clk = s_hr.toInt()*100+s_min.toInt();
    
  rtc.adjust(DateTime(s_yr.toInt(), s_mn.toInt(), s_dy.toInt(), s_hr.toInt(), s_min.toInt(), s_sec.toInt()));
}

void print2digits(int number) {
  if (number >= 0 && number < 10) {
    Serial.write('0');
  }
  Serial.print(number);
}
